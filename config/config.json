/* 如果在actions中运行，请把配置好的本文件按格式复制到secrets(ADVCONFIG)中，本文件仅供本地运行时使用
 本文件格式符合json5标准，json5向下兼容json  */
{
    "version": "1.2.1", // 配置文件版本,严禁修改
    "http_header": {    // http头部，访问B站时使用  注:User-Agent建议改为常用的浏览器ua(下面是google浏览器)，其他的不改
    	"User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
    	"Referer": "https://www.bilibili.com/",
    	"Connection": "keep-alive"
    },
    "default": {
        "judgement_task": {      //  任务:风纪委员投票
            "enable": true,      //  任务开关，值为true或false分别代表开启和关闭
            "run_once": true,   //没有案件立即退出，值为true或false，值为false才会等待超时退出(Actions上默认)，云函数上推荐设置为true并每隔30分钟调用此功能
            "params": {      // 默认投票参数，vote值程序会自动使用从众法填写，注意此项下面的可选子参数的值不止vote和attr两个，其他参数请看项目的说明文件(其他参数均为非必须参数可以不需要)
                "vote": 4,   // 投票类型，值为整数，4为投删除票，其他取值看项目说明文件，非必须参数此行可以删除但不建议
                "attr": 0    // 是否匿名，值为整数，0为匿名投票，其他取值看项目说明文件，非必须参数此行可以删除但不建议
            },
            "vote_num": 20,         // 投票次数，值为整数，达到投票次数后退出任务
            "check_interval": 420,  // 定时检查间隔，值为数字(单位秒)，当没有案件时每隔一段时间定时检查是否有新的案件，请适当设置此间隔(不宜过短或过长)
            "timeout": 2700         // 任务超时，值为数字(单位秒)，超过时间仍没有达到投票次数则退出任务
        },
    },
    "webhook": { /* 用于自定义消息推送,server酱消息推送只需填写下面SCKEY参数和在hooks参数中enable设置为true，另外提供邮箱推送和telegram推送模板
                    使用actions的用户也可以直接使用secrets(push_message)，不需要填写本项
                    如果使用其他推送平台，请自行查阅相应平台数据格式，按照本模板添加到本配置中，理论上本项目从配置文件上支持所有http格式的消息推送平台    */

        "http_header": {"User-Agent":"Mozilla/5.0"}, // 定义http头部，访问消息推送接口时使用
        "variable": { // 声明变量,在hooks参数中的url参数和params参数中使用大括号{}可直接引用在此声明的变量，"msg_"开头变量为程序内置变量不允许赋值
            "msg_simple": null, // msg_simple为简化的日志消息，用于下面hooks消息推送接口引用
        //  "msg_raw": null,    // msg_raw为完整的日志消息，用于下面hooks消息推送接口引用，若不引用最好注释掉，否则占用内存空间

            "title": "B站助手脚本消息推送", // 此为自定义变量，用于下面hooks消息推送接口引用
            "SendKey": "",
        /*  "email": "",
            "telegram_bot_token": "",
            "telegram_bot_chatid": "",
            "SKEY": "" */
        },
        "hooks": [ // 在这里以数组的形式定义所有消息推送回调接口
        	{
                "enable": false, // 开关，需要开启请直接把本项删除或设置为true
                "name": "server酱Turbo版消息推送", // webhook名称，仅用于日志显示不用于实际消息推送
                "msg_separ": "\n\n",       // 消息分隔符，推送消息时将每一条消息用两个换行符(\n)隔开
                "method": 1,               // 请求方式,0为get,1为post,3为以json方式post
                "url": "https://sctapi.ftqq.com/{SendKey}.send", // 请求地址,{SendKey}为对上面variable变量中的SendKey的引用，当然也可以直接把SCKEY的值放在url里面
                "params": {                                // 请求参数,server酱推送需要text和desp两个参数，分别把变量里title和msg_simple(简化消息)赋值进去
                    "text": "{title}",
                    "desp": "{msg_simple}" 
                }
            }/*,
            {
                "enable": false,
                "name": "server酱消息推送",
                "msg_separ": "\n\n",
                "method": 1,
                "url": "https://sc.ftqq.com/{SCKEY}.send",
                "params": {
                    "text": "{title}",
                    "desp": "{msg_simple}" 
                }
            }, //若要实现其他消息推送接口，需要自己查阅相关文档构建method，url和params三个参数，下面是邮箱推送和telegram_bot推送的例子，其他平台自行探索
            {
                "enable": false,
                "name": "邮箱消息推送",
                "msg_separ": "<br>",
                "method": 1,
                "url": "https://email.berfen.com/api",
                "params": {
                    "to": "{email}",
                    "title": "{title}",
                    "text": "{msg_simple}" 
                }
            },
            {
                "enable": false,
                "name": "telegram_bot消息推送",
                "method": 1,
                "url": "https://api.telegram.org/bot{telegram_bot_token}/sendMessage",
                "params": {
                    "chat_id": "{telegram_bot_chatid}",
                    "text": "{msg_simple}"
                }
            },
            {
                "enable": false,
                "name": "酷推个人QQ消息推送",
                "method": 3,
                "url": "https://push.xuthus.cc/send/{SKEY}",
                "params": {
                    "c": "{msg_simple}"
                }
            }*/
        ]
    },
    "log_file": "BiliExp.log",   // 输出日志文件，不输出请留空，也可填写完整路径
    "log_console": false,         // 是否把日志输出到控制台
    "users": [{                 //账户数组，每个账户包含一个cookieDatas和tasks参数，使用actions的用户可以使用secrets(biliconfig)指定cookie而不用本参数
        "cookieDatas": {        // cookie获取方式见项目说明
            "SESSDATA": "账号SESSDATA",
            "bili_jct": "账号bili_jct",
            "DedeUserID": "账号uid"
        },
        "show_name": "", /* 昵称，用于日志，消息推送，填空则默认使用账号昵称，在actions上不想显示真实昵称时使用
        /* 下面tasks参数与最上面default参数作用相同，但优先级更高，用于定制每个账号的参数，
             tasks参数中不存在的配置用default代替，为空则相当于直接使用default中所有配置当做这个账户的配置
             default中不存在的配置在tasks参数中出现则无效(default中支持以删除功能配置的方式禁用功能，这种禁用是全局的，在这里配置开启也无效) */
        "tasks": {}
    }/*, { //下面注释掉的是第二个账号的参数例子，以此类推多个账号，单账号仅填写上面内容
        "cookieDatas": {
            "SESSDATA": "4a5f1c63%2C1785313721%2Cdf9fc*a1",
            "bili_jct": "cf28ba45824d443646907a5c4da8cf1",
            "DedeUserID": "914624742"
        },
        "show_name": "账号2",
        "tasks": {                //上面default参数中投币任务和风纪委任务都是开启的，这里在第二个账号上关闭而不影响其他任务和其他账号
            "coin_task": false,   //直接赋值false是简化的关闭方法，也可以像default中那样用enable参数关闭，若只修改投币数量(配置中的其中一项)则必须按照default中的格式指定
            "judgement_task": false
        }
    }*/]
}
